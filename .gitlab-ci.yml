stages:
  - build
  - dockerize
  - quality
  - publish-docker-image

include:
  - project: 'lamansys/cicd'
    file:
      - 'gitlab/stages/build-full.yml'
      - 'gitlab/stages/quality-full.yml'

workflow:
  # https://medium.com/devops-with-valentine/fix-gitlab-ci-duplicate-pipelines-in-merge-requests-when-using-rules-9a1486994f3a
  # Rule are evaluated in the order they appear. 
  # So if a merge request pipeline is detected, this is “killed” with the when: never configuration.
  # If the first rule does not match, the next one will always match, enabling all other pipelines.
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: always

build_frontend:
  extends: .build_frontend_base
  cache:
    key:
      files:
        - front-end/apps/package-lock.json
        - front-end/backoffice/package-lock.json
    paths:
      - front-end/apps/node_modules
      - front-end/backoffice/node_modules

dockerize_snomed-schema:
  extends: .dockerize
  variables:
    IMAGE_TAG: ${CI_REGISTRY_IMAGE}/snomed-schema:$CI_COMMIT_REF_SLUG
    DOCKER_FOLDER: "dba/snomed-schema/"


publish_dockerhub_snomed-schema:
  extends: .dockerize_entrega
  variables:
    IMAGE_TAG: historiaclinica/snomed-schema:$CI_COMMIT_TAG
    DOCKER_FOLDER: "dba/snomed-schema/"
  rules:
    - if: '$CI_COMMIT_TAG'
      when: manual


code_freeze:
  stage: publish-docker-image
  image: bitnami/git:2.42.0
  script:
    - apt-get update
    - apt-get install -y maven
    - ./scripts/run-code-freeze.sh
  when: manual
  rules:
    - if: $ADD_CF == "true" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

generar_release:
  stage: publish-docker-image
  image: bitnami/git:2.42.0
  script:
    - ./scripts/run-release.sh
  only:
    - /^rc-.*$/ 
  when: manual

.dockerize_dockerhub:
  stage: publish-docker-image
  extends: .dockerize_folder
  variables:
    CI_REGISTRY: "index.docker.io"
    CI_REGISTRY_IMAGE: "historiaclinica"
    CI_REGISTRY_USER: $DOCKERHUB_REGISTRY_USER
    CI_REGISTRY_PASSWORD: $DOCKERHUB_REGISTRY_PASSWORD

dockerize_app_dockerhub:
  extends: .dockerize_dockerhub
  variables:
    IMAGE_NAME: hsi
    IMAGE_VERSION: ${CI_COMMIT_TAG}
    DOCKER_FOLDER: "ci/docker/entrega/nginx-jar"
  dependencies:
    - build_backend
    - build_frontend
  before_script:
    - mv -v back-end/.docker/* ${DOCKER_FOLDER}/
    - mv -v front-end/.docker/* ${DOCKER_FOLDER}/
  rules:
    - if: '$CI_COMMIT_TAG'
      exists:
        - ci/docker/entrega/nginx-jar/Dockerfile
      when: manual

dockerize_app_dockerhub_latest:
  extends: dockerize_app_dockerhub
  variables:
    IMAGE_VERSION: latest

dockerize_cubejs_dockerhub:
  extends: .dockerize_dockerhub
  variables:
    IMAGE_NAME: cubejs
    IMAGE_VERSION: ${CI_COMMIT_TAG}
    DOCKER_FOLDER: "cubejs/entrega"
  before_script:
    - mv -rv cubejs/schema cubejs/entrega
    - mv -v cubejs/cube.js cubejs/entrega
  rules:
    - if: '$CI_COMMIT_TAG'
      exists:
        - cubejs/entrega/Dockerfile
      when: manual

dockerize_cubejs_dockerhub_latest:
  extends: dockerize_cubejs_dockerhub
  variables:
    IMAGE_VERSION: latest

test_frontend:
  extends: .test_frontend_base
  cache:
    key:
      files:
        - front-end/apps/package-lock.json
        - front-end/backoffice/package-lock.json
    paths:
      - front-end/apps/node_modules
      - front-end/backoffice/node_modules
