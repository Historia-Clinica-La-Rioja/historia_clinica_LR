package net.pladema.hl7.concept.administration;

import net.pladema.hl7.dataexchange.ISingleResourceFhir;
import net.pladema.hl7.dataexchange.model.adaptor.FhirID;
import net.pladema.hl7.dataexchange.model.domain.OrganizationVo;
import net.pladema.hl7.supporting.conformance.InteroperabilityCondition;
import net.pladema.hl7.supporting.exchange.database.FhirPersistentStore;
import net.pladema.hl7.supporting.terminology.coding.CodingSystem;
import org.hl7.fhir.r4.model.ContactPoint;
import org.hl7.fhir.r4.model.Location;
import org.hl7.fhir.r4.model.Reference;
import org.hl7.fhir.r4.model.ResourceType;
import org.springframework.context.annotation.Conditional;
import org.springframework.stereotype.Service;

import java.util.Map;

@Service
@Conditional(InteroperabilityCondition.class)
public class LocationResource extends ISingleResourceFhir {


    public LocationResource(FhirPersistentStore store) {
        super(store);
    }

    @Override
    public Location fetch(String id, Map<ResourceType, Reference> references) {
        OrganizationVo organization = store.getOrganization(id);

        Location resource = new Location();
        resource.setId(FhirID.autoGenerated());
        resource.addIdentifier(newIdentifier(CodingSystem.REFES, organization.getId()));
        resource.setName(organization.getName());
        if(organization.hasPhoneNumber())
            resource.addTelecom(newTelecom(organization.getPhoneNumber(), ContactPoint.ContactPointUse.WORK));
        if(organization.hasAddress())
            resource.setAddress(newAddress(organization.getFullAddress()));

        return resource;
    }

    @Override
    public ResourceType getResourceType() {
        return ResourceType.Location;
    }
}
