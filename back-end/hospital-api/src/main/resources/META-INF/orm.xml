<entity-mappings
        version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm
    http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd">

    <!-- JPA Named Native Queries -->

    <!-- ========================================== -->
    <!-- ================ Reports ================= -->
    <!-- ========================================== -->

    <named-native-query name="Reports.OutpatientSummary" result-set-mapping="Reports.OutpatientSummaryResult">
        <query>select oc.doctor_id as professional_id,
            cs.id as specialty_id, cs."name" as specialty, cs.clinical_specialty_type_id as specialtyType,
            extract(year from (age(oc.start_date, per.birth_date))) as "age", per.gender_id,
            case when coverage.patient_id is null then false else true end as "OS"
            from outpatient_consultation oc
            left join clinical_specialty cs on (oc.clinical_specialty_id = cs.id)
            join patient pat on (oc.patient_id = pat.id)
            join person per on (pat.person_id = per.id)
            left join (
            select distinct on (patient_id) patient_id
            from patient_medical_coverage
            ) coverage on (pat.id = coverage.patient_id)
            where oc.institution_id = :institutionId
            and oc.start_date between :from and :to
            and oc.billable
        </query>
    </named-native-query>
    <sql-result-set-mapping name="Reports.OutpatientSummaryResult">
        <constructor-result target-class="net.pladema.reports.repository.OutpatientSummary">
            <column name="professional_id" class="java.lang.Integer"/>
            <column name="specialty_id" class="java.lang.Integer"/>
            <column name="specialty" class="java.lang.String"/>
            <column name="specialtyType" class="java.lang.Short"/>
            <column name="age" class="java.lang.Integer"/>
            <column name="gender_id" class="java.lang.Short"/>
            <column name="OS" class="java.lang.Boolean"/>
        </constructor-result>
    </sql-result-set-mapping>
</entity-mappings>