# ===============================
# = WEB 
# ===============================

# ============= Profile =============
spring.profiles.default=dev

# ============= API =============
server.servlet.context-path=/api
server.port = ${SERVER_PORT:8080}
api.domain=${API_DOMAIN:/api}
api.auth=/auth
api.user=/users
api.user.activateUser=/enable
api.password=/passwords
api.password.reset=/reset

admin.mail=${ADMIN_MAIL:admin@example.com}
admin.password=${ADMIN_PASS:admin123}

# ============= TOKEN ===========
token.header=X-Auth-Token
token.secret=${TOKEN_SECRET:ultra_secret_token}

# Tiempo en minutos
token.expiration=${TOKEN_EXPIRATION:120}
refreshToken.expiration=0
validationToken.expiration=${VALIDTOKEN_EXPIRATION:1440}

# =============== EMAIL =================
spring.mail.host=${SMTP_HOST:smtp.gmail.com}
spring.mail.username=${SMTP_USERNAME:user}
spring.mail.password=${SMTP_PASS:pass}
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.port=${SMTP_PORT:587}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
app.mail.activate=${ACTIVATE_SENDING_EMAIL:false}



mail.from=${SMTP_EMAIL:sgh@test.org}

# ===============================
# = FRONTEND
# ===============================
frontend.loginpage=${LOGIN_PAGE:/}

# ===============================
# = Jackson
# ===============================
spring.jackson.default-property-inclusion=non_null

# ===============================
# = JPA / HIBERNATE
# ===============================

## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=${HICKARI_MAXIMUM_POOL_SIZE:3}

## SQLServer
#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.jpa.database-platform=org.hibernate.dialect.SQLServer2012Dialect
#spring.datasource.url=jdbc:sqlserver://${DATABASE_IP_PORT:localhost:1433};databaseName=${DATABASE_SCHEMA:hospitalDB};integratedSecurity=false;
#spring.datasource.username=${DATABASE_USER:SA}

## PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${DATABASE_IP_PORT:localhost:5432}/${DATABASE_SCHEMA:hospitalDB}
spring.datasource.username=${DATABASE_USER:postgres}


spring.datasource.password=${DATABASE_PASS:Local123}
spring.datasource.validationQuery = SELECT 1

#drop n create table again, good for testing, comment this in production
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=validate


management.endpoint.metrics.enabled=false
management.endpoints.web.exposure.include=${ACTUATOR_ENABLED_ENDPOINTS:health,info,env}
management.endpoints.jmx.exposure.include=${ACTUATOR_ENABLED_ENDPOINTS:health,info,env}
management.endpoint.prometheus.enabled=false
management.metrics.export.prometheus.enabled=false
management.health.mail.enabled=false
management.endpoint.health.show-details=always
management.info.git.mode=full

actuator.configuration.whitelist=${ACTUATOR_WHITELIST:0:0:0:0:0:0:0:1}
actuator.configuration.authenticated=${ACTUATOR_REQUIRED_AUTHENTICATION:false}

app.default.language=${DEFAULT_LANGUAGE:es-AR}
app.other.languages=${OTHER_LANGUAGES:en-US}

# Para ver las consultas
# spring.jpa.show-sql=true
# Para ver valores bindeados
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ===============================
# reCaptcha Google
# ===============================

google.recaptcha.secret.key=${RECAPTCHA_SECRET_KEY:6LcVh-UUAAAAAIWVvwCNB3zLdNT7BSAnCZ0cZjwz}
google.recaptcha.validator.url=https://www.google.com/recaptcha/api/siteverify
google.recaptcha.enable=${RECAPTCHA_ENABLE:true}
