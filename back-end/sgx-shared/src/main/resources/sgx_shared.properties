# ===============================
# = WEB
# ===============================
spring.main.allow-bean-definition-overriding=true
server.error.include-message=always
server.error.include-binding-errors=always

springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

springdoc.swagger-ui.show-extensions=true
springdoc.swagger-ui.show-common-extensions=true
springdoc.use-fqn=true

# = Jackson
spring.jackson.default-property-inclusion=non_null

# = API
server.servlet.context-path=/api
server.port = ${SERVER_PORT:8080}

# ===============================
# = JPA / HIBERNATE
# ===============================

## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=${HICKARI_MAXIMUM_POOL_SIZE:3}

# ===============================
# = MANAGEMENT / ACTUATOR
# ===============================
management.endpoint.metrics.enabled=false
management.endpoints.web.exposure.include=${ACTUATOR_ENABLED_ENDPOINTS:health, info, env}
management.endpoints.jmx.exposure.include=${ACTUATOR_ENABLED_ENDPOINTS:health, info, env}
management.endpoint.prometheus.enabled=true
management.endpoint.loggers.enabled=true
management.metrics.export.prometheus.enabled=true
management.health.mail.enabled=false
management.endpoint.health.show-details=always
management.info.git.mode=full

actuator.configuration.whitelist=${ACTUATOR_WHITELIST:0:0:0:0:0:0:0:1}
actuator.configuration.authenticated=${ACTUATOR_REQUIRED_AUTHENTICATION:false}

app.default.language=${DEFAULT_LANGUAGE:es}
app.other.languages=${OTHER_LANGUAGES:en-US}

# ===============================
# = MULTIPART (MultipartProperties)
# ===============================
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=20MB
# Max Request Size
spring.servlet.multipart.max-request-size=26MB
# Enable response compression
server.compression.enabled=true
# The comma-separated list of mime types that should be compressed
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
# Compress the response only if the response size is at least 1KB

app.system.node-data.update-interval=60
app.system.node-data.clean-interval=600

# ================= EMAIL ===================
app.notification.mail.from=hsi@pladema.net
app.notification.mail.fromFullname=HSI
app.notification.mail.replyTo=no-reply@pladema.net

spring.mail.host=${SMTP_HOST:}
spring.mail.port=${SMTP_PORT:465}
spring.mail.username=${SMTP_USERNAME:}
spring.mail.password=${SMTP_PASS:}

spring.mail.properties.mail.smtp.auth=${SMTP_AUTH:true}
spring.mail.properties.mail.smtp.ssl.enable=${SMTP_SSL:true}
spring.mail.properties.mail.smtp.starttls.enable=${SMTP_SSL:true}
spring.mail.properties.mail.smtp.starttls.required=${SMTP_SSL:true}
spring.mail.properties.mail.transport.protocol=smtp

app.env.domain=${APP_DOMAIN:localhost:4200}

# =========== JPA / HIBERNATE ===============
spring.jpa.database-platform=ar.lamansys.sgx.shared.repositories.dialect.CustomPostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.validationQuery = SELECT 1

#drop n create table again, good for testing, comment this in production
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.open-in-view=false

# ===============================
# reCaptcha Google
# ===============================
google.recaptcha.secret.key=${RECAPTCHA_SECRET_KEY:test-key}
google.recaptcha.site.key=${RECAPTCHA_PUBLIC_KEY:test-key}
google.recaptcha.validator.url=https://www.google.com/recaptcha/api/siteverify
google.recaptcha.enable=${RECAPTCHA_ENABLE:false}

# Http Client

app.http.client.trustInvalidCertificate=false
app.http.client.timeout=3000
#app.http.client.proxy=http://127.0.0.1:3128
