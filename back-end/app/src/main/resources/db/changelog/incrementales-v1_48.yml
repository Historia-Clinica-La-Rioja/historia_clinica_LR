databaseChangeLog: 
  - logicalFilePath: incrementales-v1_48

  - changeSet:
      id: episode_document_types_create
      comment: Create table episode_document_types
      author: fdemuguruza
      changes:
        - createTable:
            tableName: episode_document_types
            columns:
              - column:
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    primaryKeyName: PK_episode_document_types
                  name: id
                  type: int
              - column:
                  constraints:
                    nullable: false
                  name: description
                  type: varchar(100)

  - changeSet:
      id: set-patient_age_period-document
      comment: Set patient age period to document
      author: tcepeda
      dbms: postgresql
      context: "!schema-only"
      changes:
        - sql:
            sql: |-
              UPDATE "document" d
                SET patient_age_period = subquery.patient_age_period 
                FROM (
                  SELECT d.id, CASE WHEN d.created_on IS NOT NULL AND per.birth_date IS NOT NULL THEN CONCAT('P', 
                  CASE WHEN (EXTRACT(years FROM AGE(d.created_on, per.birth_date)) > 0) THEN (CONCAT(EXTRACT(years FROM AGE(d.created_on, per.birth_date)),  'Y')) END,
                  CASE WHEN (EXTRACT(months FROM AGE(d.created_on, per.birth_date)) > 0) THEN (CONCAT(EXTRACT(months FROM AGE(d.created_on, per.birth_date)),  'M')) END,
                  CASE WHEN (EXTRACT(days FROM AGE(d.created_on, per.birth_date)) > 0) THEN (CONCAT(EXTRACT(days FROM AGE(d.created_on, per.birth_date)),  'D')) END,
                  CASE WHEN (EXTRACT(years FROM AGE(d.created_on, per.birth_date)) < 1) AND (EXTRACT(months FROM AGE(d.created_on, per.birth_date)) < 1)
                  AND (EXTRACT(days FROM AGE(d.created_on, per.birth_date)) < 1) THEN '0D' END) ELSE NULL END AS patient_age_period
                  FROM "document" d
                  JOIN patient p ON (d.patient_id = p.id)
                  JOIN person per ON (p.person_id = per.id)
                ) subquery
                WHERE d.id = subquery.id
                AND d.patient_age_period IS NULL


  - changeSet:
      id: addColumn-to_audit-patient
      author: bchacon
      changes:
        - addColumn:
            tableName: patient
            columns:
              - column:
                  constraints:
                    nullable: false
                  name: to_audit
                  type: boolean
                  defaultValue: ${boolean.false}

  - changeSet:
      id: createTable-auditable_patient
      author: bchacon
      changes:
        - createTable:
            tableName: auditable_patient
            columns:
              - column:
                  autoIncrement: true
                  constraints:
                      primaryKey: true
                      primaryKeyName: PK_auditable_patient
                  name: id
                  type: int
              - column:
                  constraints:
                    nullable: false
                    references: patient(id)
                    foreignKeyName: FK_auditable_patient_patient_id
                  name: patient_id
                  type: int
              - column:
                  constraints:
                    nullable: false
                    references: institution(id)
                    foreignKeyName: FK_auditable_patient_institution_id
                  name: institution_id
                  type: int
              - column:
                  constraints:
                    nullable: false
                    references: users(id)
                    foreignKeyName: FK_auditable_patient_created_by
                  name: created_by
                  type: int
                  defaultValue: -1
              - column:
                  constraints:
                    nullable: false
                  name: message
                  type: text
              - column:
                  constraints:
                    nullable: false
                  name: created_on
                  type: datetime