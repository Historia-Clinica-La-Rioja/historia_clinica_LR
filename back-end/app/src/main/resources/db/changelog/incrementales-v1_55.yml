databaseChangeLog: 
    - logicalFilePath: incrementales-v1_55

    - changeSet:
        id: update_view_v_appointment_summary
        comment: Se actualiza la vista v_appointment_summary para obtener turnos sin cobertura
        author: mvenere
        changes:
          - createView:
              viewName: v_appointment_summary
              fullDefinition: false
              replaceIfExists: true
              selectQuery: |-
                (SELECT a.id,
                      a.date_type_id,
                      a.hour,
                      a.appointment_state_id,
                      ass.description AS status_description,
                      a.is_overturn,
                      a.phone_number,
                      a.phone_prefix,
                      a.patient_id,
                      p1.first_name            AS patient_first_name,
                      p1.last_name             AS patient_last_name,
                      p1.identification_number AS patient_identification_number,
                      p1.gender_id             AS patient_gender_id,
                      hp.license_number,
                      p2.first_name            AS doctor_name,
                      p2.last_name             AS doctor_last_name,
                      P2.identification_number AS doctor_identification_number,
                      mc.name AS medical_coverage_name,
                      mc.cuit,
                      pmc.affiliate_number,
                      cs.sctid_code,
                      cs.name AS clinical_specialty_name,
                      doff.institution_id,
                      i.cuit                   AS institution_cuit,
                      i.sisa_code,
                      cs.id as clinical_specialty_id
                FROM appointment AS a
                INNER JOIN appointment_state ass on a.appointment_state_id = ass.id
                INNER JOIN appointment_assn aa on aa.appointment_id = a.id
                INNER JOIN patient pa1 on a.patient_id = pa1.id
                INNER JOIN person p1 ON pa1.person_id = p1.id
                INNER JOIN diary d ON aa.diary_id = d.id
                INNER JOIN doctors_office doff ON d.doctors_office_id = doff.id
                INNER JOIN institution i ON doff.institution_id = i.id
                INNER JOIN clinical_specialty cs ON d.clinical_specialty_id = cs.id
                INNER JOIN healthcare_professional hp ON d.healthcare_professional_id = hp.id
                INNER JOIN person p2 ON hp.person_id = p2.id
                LEFT JOIN patient_medical_coverage AS pmc ON a.patient_medical_coverage_id = pmc.id
                LEFT JOIN medical_coverage mc ON pmc.medical_coverage_id = mc.id
                WHERE a.appointment_state_id != 6)
                UNION ALL
                (SELECT a.id,
                      a.date_type_id,
                      a.hour,
                      a.appointment_state_id ,
                      ass.description AS status_description,
                      a.is_overturn,
                      a.phone_number,
                      a.phone_prefix,
                      a.patient_id,
                      bp.first_name            AS patient_first_name,
                      bp.last_name             AS patient_last_name,
                      bp.identification_number AS patient_identification_number,
                      bp.gender_id             AS patient_gender_id,
                      hp.license_number,
                      p2.first_name            AS doctor_name,
                      p2.last_name             AS doctor_last_name,
                      P2.identification_number AS doctor_identification_number,
                      null AS medical_coverage_name,
                      null AS cuit,
                      null AS affiliate_number,
                      cs.sctid_code,
                      cs.name AS clinical_specialty_name,
                      doff.institution_id,
                      i.cuit                   AS institution_cuit,
                      i.sisa_code,
                      cs.id as clinical_specialty_id
                FROM appointment AS a
                INNER JOIN appointment_state ass on a.appointment_state_id = ass.id
                INNER JOIN appointment_assn aa on aa.appointment_id = a.id
                INNER JOIN booking_appointment ba on a.id = ba.appointment_id
                INNER JOIN booking_person bp ON ba.booking_person_id = bp.id
                INNER JOIN diary d ON aa.diary_id = d.id
                INNER JOIN doctors_office doff ON d.doctors_office_id = doff.id
                INNER JOIN institution i ON doff.institution_id = i.id
                INNER JOIN clinical_specialty cs ON d.clinical_specialty_id = cs.id
                INNER JOIN healthcare_professional hp ON d.healthcare_professional_id = hp.id
                INNER JOIN person p2 ON hp.person_id = p2.id
                WHERE a.appointment_state_id = 6)

    - changeSet:
        id: createIndexPatientId-appointment
        author: mmalyvarni
        dbms: postgresql
        changes:
          - sql:
              sql: |-
                CREATE INDEX IF NOT EXISTS "IDX_appointment_patient_id" ON appointment(patient_id);

    - changeSet:
        id: createIndexPatientId-patient_medical_coverage
        author: mmalyvarni
        dbms: postgresql
        changes:
          - sql:
              sql: |-
                CREATE INDEX IF NOT EXISTS "IDX_patient_medical_coverage_patient_id" ON patient_medical_coverage(patient_id);

    - changeSet:
        id: createIndexDosageId_medication_statement
        author: mmalyvarni
        dbms: postgresql
        changes:
          - sql:
              sql: |-
                CREATE INDEX IF NOT EXISTS "IDX_medication_statement_dosage_id" ON medication_statement(dosage_id);

    - changeSet:
        id: createIndexReports
        author: mvenere
        dbms: postgresql
        changes:
          - sql:
              sql: |-
                CREATE INDEX IF NOT EXISTS "IDX_outpatient_consultation_reasons_outpatient_consultation_id" ON outpatient_consultation_reasons(outpatient_consultation_id);
                CREATE INDEX IF NOT EXISTS "IDX_odontology_consultation_indices_odontology_consultation_id" ON odontology_consultation_indices(odontology_consultation_id);
                CREATE INDEX IF NOT EXISTS "IDX_nursing_consultation_clinical_specialty_id" ON nursing_consultation(clinical_specialty_id);
                CREATE INDEX IF NOT EXISTS "IDX_odontology_consultation_institution_id" ON odontology_consultation(institution_id);
                CREATE INDEX IF NOT EXISTS "IDX_nursing_consultation_institution_id" ON nursing_consultation(institution_id);
                CREATE INDEX IF NOT EXISTS "IDX_outpatient_consultation_institution_id" ON outpatient_consultation(institution_id);
                CREATE INDEX IF NOT EXISTS "IDX_document_procedure_document_id" ON document_procedure(document_id);
                CREATE INDEX IF NOT EXISTS "IDX_document_health_condition_document_id" ON document_health_condition(document_id);
                CREATE INDEX IF NOT EXISTS "IDX_document_procedure_document_id" ON document_procedure(document_id);

    - changeSet:
        id: external_cause_type-createTable
        author: fsimaro
        changes:
          - createTable:
              tableName: external_cause_type
              columns:
                - column:
                    name: id
                    type: varchar(20)
                    constraints:
                      nullable: false
                      primaryKey: true
                      primaryKeyName: PK_external_cause_type
                - column:
                    name: description
                    type: varchar(100)
                    constraints:
                      nullable: false

    - changeSet:
        id: external_cause_type-metadata
        author: fsimaro
        changes:
          - sql:
              sql: |-
                INSERT INTO external_cause_type VALUES ('55566008', 'Accidente');
                INSERT INTO external_cause_type VALUES ('276853009', 'Lesión autoinfligida');
                INSERT INTO external_cause_type VALUES ('61372001', 'Agresión');
                INSERT INTO external_cause_type VALUES ('00000001', 'Se ignora');

    - changeSet:
        id: external_cause-createTable
        author: fsimaro
        changes:
          - createTable:
              tableName: external_cause
              columns:
                - column:
                    autoIncrement: true
                    constraints:
                      primaryKey: true
                      primaryKeyName: PK_external_cause
                    name: id
                    type: int
                - column:
                    name: external_cause_type_id
                    type: varchar(20)
                - column:
                    name: event_location
                    type: smallint
                - column:
                    name: snomed_id
                    type: int
                - column:
                    constraints:
                      nullable: false
                    name: created_by
                    type: int
                    defaultValue: -1
                - column:
                    constraints:
                      nullable: false
                    name: updated_by
                    type: int
                    defaultValue: -1
                - column:
                    constraints:
                      nullable: false
                    name: created_on
                    type: datetime
                    defaultValueDate: ${date.now}
                - column:
                    constraints:
                      nullable: false
                    name: updated_on
                    type: datetime
                    defaultValueDate: ${date.now}
                - column:
                    constraints:
                      nullable: false
                    name: deleted
                    type: BOOLEAN
                    defaultValue: ${boolean.false}
                - column:
                    name: deleted_by
                    type: int
                - column:
                    name: deleted_on
                    type: datetime

    - changeSet:
        id: document_external_cause-createTable
        author: fsimaro
        changes:
          - createTable:
              tableName: document_external_cause
              columns:
                - column:
                    constraints:
                      nullable: false
                    name: external_cause_id
                    type: int
                - column:
                    constraints:
                      nullable: false
                    name: document_id
                    type: bigint
          - addPrimaryKey:
              clustered: true
              columnNames: document_id, external_cause_id
              constraintName: PK_document_external_cause
              tableName: document_external_cause
              validate: true
          - addForeignKeyConstraint:
              baseColumnNames: document_id
              baseTableName: document_external_cause
              constraintName: FK_document_external_cause_document_id
              onDelete: NO ACTION
              onUpdate: NO ACTION
              referencedColumnNames: id
              referencedTableName: document
              validate: true
          - addForeignKeyConstraint:
              baseColumnNames: external_cause_id
              baseTableName: document_external_cause
              constraintName: FK_document_external_cause_external_cause_id
              onDelete: NO ACTION
              onUpdate: NO ACTION
              referencedColumnNames: id
              referencedTableName: external_cause
              validate: true
              
    - changeSet:    
        id: add_emergency_care_patient_type
        author: mmalyvarni
        context: "!schema-only"
        changes:
          - sql:
              sql: |-
                INSERT INTO patient_type (id,description,active,audit) VALUES (8,'Temporal de Guardia',${boolean.true},${boolean.false});