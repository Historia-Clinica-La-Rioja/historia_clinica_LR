---
- name: Add EPEL repository
  package:
    name: epel-release
    state: present

- name: Install basic packages
  package:
    name: ['vim', 'bash-completion', 'tmux',
           'tree', 'htop', 'wget', 'unzip', 'curl', 'git']
    state: present

- name: Install Java 8 CentOS
  package:
    name: "java-1.{{ jdk_major_version }}.0-openjdk"
    state: present

- name: Add tomcat group
  group:
    name: tomcat

- name: Add "tomcat" user
  user:
    name: tomcat
    group: tomcat
    home: /usr/share/tomcat
    createhome: false
    system: true

- name: Download Tomcat
  get_url:
    url: "{{ tomcat_archive_url }}"
    dest: "{{ tomcat_archive_dest }}"

- name: Create a tomcat directory
  file:
    path: /usr/share/tomcat
    state: directory
    owner: tomcat
    group: tomcat

- name: Extract tomcat archive
  unarchive:
    src: "{{ tomcat_archive_dest }}"
    dest: /usr/share/tomcat
    owner: tomcat
    group: tomcat
    remote_src: true
    extra_opts: "--strip-components=1"
    creates: /usr/share/tomcat/bin

- name: Copy tomcat service file
  template:
    src: templates/tomcat.service.j2
    dest: /etc/systemd/system/tomcat.service
  when: ansible_service_mgr == "systemd"

- name: Start and enable tomcat
  service:
    daemon_reload: true
    name: tomcat
    state: started
    enabled: true
  when: ansible_service_mgr == "systemd"

- name: wait for tomcat to start
  wait_for: 
    port: 8080

- name: Start and enable firewalld
  service:
    name: firewalld
    state: started
    enabled: true
  when: ansible_service_mgr == "systemd" and ansible_connection != "docker"

- name: Open tomcat port on the firewall
  firewalld:
    port: 8080/tcp
    permanent: true
    state: enabled
    immediate: true
  when: ansible_service_mgr == "systemd" and ansible_connection != "docker"
