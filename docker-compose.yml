version: '3.6'
services:
  hsi-db:
    image: postgres:16
    container_name: hsi-db
    environment:
      POSTGRES_PASSWORD: Local123
      POSTGRES_DB: hospitalDB
      PGDATA: /data/pgdata
    volumes:
      - ./ci/dbapgsql/:/app/pg/
      - ./.docker-data/postgres/:/data/
    ports:
      - "5432:5432"
    restart: always

  hsi-backend:
    build: ./back-end
    container_name: hsi-backend
    environment:
      # Modo produccion
      SPRING_PROFILES_ACTIVE: prod
      DATABASE_IP_PORT: hsi-db:5432
      DATABASE_SCHEMA: hospitalDB
      DATABASE_USER: postgres
      DATABASE_PASS: Local123
      DOCUMENT_ROOT_DIRECTORY: /var/hsi/documents
      TOKEN_SECRET: shhhhh
      ADMIN_PASS: admin123
      SNOWSTORM_SERVICE: https://snowstorm-test.msal.gob.ar
      # Opcional Tableros
      CUBEJS_API_URL: http://hsi-cubejs:4000/cubejs-api/v1
      # Opcional Broker MQTT
      MQTT_CLIENT_CONNECTION: "true"
      MQTT_SERVER_ADDRESS: tcp://hsi-mosquitto:1883
      MQTT_CLIENT_USERNAME: HSI
      MQTT_CLIENT_PASSWORD: hsiPassword
      # Opcional Mails con mailhog (no tiene SSL ni auth)
      SMTP_HOST: hsi-mails
      SMTP_PORT: 1025
      SMTP_AUTH: "false"
      SMTP_SSL: "false"
    volumes:
      - ./.docker-data/documents/:/var/hsi/documents
    ports:
      - "8080:80"

  hsi-frontend:
    build: ./front-end
    container_name: hsi-frontend
    environment:
      API_IP_PORT: hsi-backend:80
    ports:
      - "4200:80"

  hsi-cubejs:
    build: ./cubejs
    container_name: hsi-cubejs
    ports:
        - 4000:4000
    environment:
      CUBEJS_DB_HOST: hsi-db
      CUBEJS_DB_PORT: 5432
      DATABASE_NAME: hospitalDB
      CUBEJS_DB_USER: postgres
      CUBEJS_DB_PASS: Local123

  hsi-mails:
    image: mailhog/mailhog:latest
    container_name: hsi-mails
    ports:
      - "1025:1025"
      - "8025:8025"

  hsi-mosquitto:
    image: eclipse-mosquitto:2-openssl
    container_name: hsi-mosquitto
    ports:
      - 1883:1883 #over tcp
      - 9001:9001 #over websocket
    networks:
      - cedalo-platform
    volumes:
      - ./ci/mosquitto:/mosquitto/config
      - ./.docker-data/mosquitto:/mosquitto/data

  hsi-mosquitto-management-center:
    image: cedalo/management-center:2
    container_name: hsi-mosquitto-management-center
    ports:
      - 8088:8088
    depends_on:
      - hsi-mosquitto
    networks:
      - cedalo-platform
    environment:
      CEDALO_MC_BROKER_ID: mosquitto-2.0
      CEDALO_MC_BROKER_NAME: Mosquitto 2.0
      CEDALO_MC_BROKER_URL: mqtt://hsi-mosquitto:1883
      CEDALO_MC_BROKER_USERNAME: CEDALO_BROKER_USER
      CEDALO_MC_BROKER_PASSWORD: cedaloBrokerPassword
      CEDALO_MC_USERNAME: cedaloadmin
      CEDALO_MC_PASSWORD: cedaloadminPassword

  snomed_schema:
    build: ./dba/snomed-schema
    container_name: snomed_schema
  # ejecutar manualmente para crear el esquema 'snomedct'
    restart: no
    environment:
      POSTGRES_HOST: hsi-db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Local123
      POSTGRES_DB: hospitalDB
    volumes:
      # Absolute Path on the host
      - ./SnomedCT_Argentina-EditionRelease:/usr/src/app/Release2405


networks:
  cedalo-platform:
    name: cedalo-platform
    driver: bridge


volumes:
  tmpdata:
    driver_opts:
      type: tmpfs
      o: size=20485760
      device: tmpfs
